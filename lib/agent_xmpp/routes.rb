##############################################################################################################
module AgentXmpp
  module Routing
  
    #####-------------------------------------------------------------------------------------------------------
    class Routes

      #.........................................................................................................
      cattr_reader :map
      @@map = Map.new
      #.........................................................................................................

      #.........................................................................................................
      class << self
      
        #.......................................................................................................
        def draw
          yield @@map
        end

        #.......................................................................................................
        def invoke(connection, params)
          route_path = "#{params[:node]}/#{params[:action]}"
          field_path = self.fields(params)
          route_path += "/#{field_path}" unless field_path.nil? 
          route = self.map[route_path] || {:controller => params[:node], :action => params[:action]}
          eval("#{route[:controller].classify}Controller").new.handle_request(connection, route[:action], params)
        end
        
        #.......................................................................................................
        def fields(params)
          nil
        end
        
      end
      #.........................................................................................................

      #### Routes
      end

  #### Routing
  end
#### AgentXmpp
end
