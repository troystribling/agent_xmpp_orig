##############################################################################################################
module AgentXmpp
  
  ############################################################################################################
  class NotConnected < Exception; end

  ############################################################################################################
  class Connection < EventMachine::Connection

    #---------------------------------------------------------------------------------------------------------
    include Parser
    #---------------------------------------------------------------------------------------------------------

    #---------------------------------------------------------------------------------------------------------
    attr_accessor :host, :port
    #---------------------------------------------------------------------------------------------------------

    #---------------------------------------------------------------------------------------------------------
    # EventMachine::Connection callbacks
    #.........................................................................................................
    def connection_completed
      puts 'connection_completed'
      @stream_features, @stream_mechanisms = {}, []
      self.init(self.host)
    end

    #.........................................................................................................
    def receive_data(data)
      puts "receive_data: #{data.to_s}"
      super(data)
    end

    #.........................................................................................................
    def send(data, &blk)
      self.send_data(data.to_s)
    end

  ############################################################################################################
  # Connection
  end

##############################################################################################################
# AgentXmpp
end
