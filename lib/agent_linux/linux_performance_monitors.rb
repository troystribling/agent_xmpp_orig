############################################################################################################
class LinuxPerformanceMonitors

  #.........................................................................................................
  @monitors = {}
  @thresholds = []
  @threshold_window_size = 3
  @collect_monitors
  #.........................................................................................................

  ###------------------------------------------------------------------------------------------------------
  class << self

    #.......................................................................................................
    attr_reader :monitors, :thresholds
    attr_accessor :thresholds
    
    #.......................................................................................................
    def monitors_for_class(mon_class)
      @monitors[mon_class].map{|m| m[:monitor]}
    end
    
    #.......................................................................................................
    def add_monitors
      yield self
    end

    #.......................................................................................................
    def add_class(mon_class)
      @collect_monitors = []
      yield self
      @monitors[mon_class] = @collect_monitors
    end

    #.......................................................................................................
    def add(mon, units, description, options = {})
      @collect_monitors.push({:monitor => mon, :description => description, :units => units})
      @thresholds.push({:monitor => monitor, :threshold => options[:threshold]}) unless options[:threshold].nil?
    end

  ###------------------------------------------------------------------------------------------------------
  end

############################################################################################################
# LinuxPerformanceMonitors
end